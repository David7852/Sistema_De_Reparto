<?php

/**
 * This is the model base class for the table "encargo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Encargo".
 *
 * Columns in table "encargo" available as properties of the model,
 * followed by relations of table "encargo" available as properties of the model.
 *
 * @property integer $cod_encargo
 * @property integer $cod_envio
 * @property integer $id_chofer
 * @property string $placa
 * @property string $fecha_inicio
 *
 * @property Chofer $idChofer
 * @property Camion $placa0
 * @property Envio $codEnvio
 * @property Paquete[] $paquetes
 */
abstract class BaseEncargo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'encargo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Encargo|Encargos', $n);
	}

	public static function representingColumn() {
		return array(' ','cod_encargo','fecha_inicio');
	}

	public function rules() {
		return array(
			array('cod_envio',  'required'),
			array('cod_envio, id_chofer', 'numerical', 'integerOnly'=>true),
			array('placa', 'length', 'max'=>10),
                        array('fecha_inicio', 'length', 'max'=>25),
			array('cod_encargo, cod_envio, id_chofer, placa, fecha_inicio', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idChofer' => array(self::BELONGS_TO, 'Chofer', 'id_chofer'),
			'placa0' => array(self::BELONGS_TO, 'Camion', 'placa'),
			'codEnvio' => array(self::BELONGS_TO, 'Envio', 'cod_envio'),
			'paquetes' => array(self::HAS_MANY, 'Paquete', 'cod_encargo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'cod_encargo' => Yii::t('app', 'Cod Encargo'),
			'cod_envio' => null,
			'id_chofer' => null,
			'placa' => null,
			'fecha_inicio' => Yii::t('app', 'Fecha Inicio'),
			'idChofer' => null,
			'placa0' => null,
			'codEnvio' => null,
			'paquetes' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
                
                $conexion = $conexion = Util::connect();
                if(Util::isEmpresa(Yii::app()->user->name))
                {
                    $query="SELECT `cod_envio` FROM `envio` WHERE `id_empresa`=".Util::getid(Yii::app()->user->name);
                        $r=mysql_query($query,$conexion) or die (mysql_error());
                        $A="`cod_envio`=-1 ";
                        while($arid=mysql_fetch_array($r,MYSQL_ASSOC))
                            foreach($arid as $i)
                                $A=$A." OR `cod_envio` = ".($i);
                        $query="SELECT `cod_encargo` FROM `encargo` WHERE ".$A;
                        $r=mysql_query($query,$conexion) or die (mysql_error());
                        $ids=array();
                        while($ari=mysql_fetch_array($r,MYSQL_ASSOC))
                            foreach($ari as $i)
                                array_push($ids,$i);
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_envio',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_envio',  -1, false);
                }else
                    if(Util::isChofer(Yii::app()->user->name))
                {
                    $query="SELECT `cod_encargo` FROM `encargo` WHERE `id_chofer`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_encargo',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_encargo',  -1, false);
                }
                else    
                    if(Util::isOperador(Yii::app()->user->name))
                    {
                        
                        $query="SELECT `cod_envio` FROM `envio` WHERE `id_operador`=".Util::getid(Yii::app()->user->name);
                        $r=mysql_query($query,$conexion) or die (mysql_error());
                        $A="`cod_envio`=-1 ";
                        while($arid=mysql_fetch_array($r,MYSQL_ASSOC))
                            foreach($arid as $i)
                                $A=$A." OR `cod_envio` = ".($i);
                        $query="SELECT `cod_encargo` FROM `encargo` WHERE ".$A;
                        $r=mysql_query($query,$conexion) or die (mysql_error());
                        $ids=array();
                        while($ari=mysql_fetch_array($r,MYSQL_ASSOC))
                            foreach($ari as $i)
                                array_push($ids,$i);
                        if(count($ids)>0)//si hay resultados, los muestra
                            $criteria->compare('cod_envio',  $ids, true);
                        else//si no, no muestra nada (nunca un id sera igual a -1)
                            $criteria->compare('cod_envio',  -1, false);
                    }
                mysql_close($conexion);
                

		$criteria->compare('cod_encargo', $this->cod_encargo);
		$criteria->compare('cod_envio', $this->cod_envio);
		$criteria->compare('id_chofer', $this->id_chofer);
		$criteria->compare('placa', $this->placa);
		$criteria->compare('fecha_inicio', $this->fecha_inicio, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        	public function searchU() {
		$criteria = new CDbCriteria;
                $conexion = $conexion = Util::connect();
                if(Util::isChofer(Yii::app()->user->name))
                {
                    $query="SELECT `cod_encargo` FROM `encargo` WHERE `id_chofer`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_encargo',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_encargo',  -1, false);
                }
                mysql_close($conexion);
		$criteria->compare('cod_encargo', $this->cod_encargo);
		$criteria->compare('cod_envio', $this->cod_envio);
		$criteria->compare('id_chofer', $this->id_chofer);
		$criteria->compare('placa', $this->placa);
		$criteria->compare('fecha_inicio', $this->fecha_inicio, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}