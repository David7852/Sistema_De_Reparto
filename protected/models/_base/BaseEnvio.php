<?php

/**
 * This is the model base class for the table "envio".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Envio".
 *
 * Columns in table "envio" available as properties of the model,
 * followed by relations of table "envio" available as properties of the model.
 *
 * @property integer $cod_envio
 * @property string $estado
 * @property integer $id_empresa
 * @property integer $id_operador
 * @property integer $cod_presupuesto
 * @property string $fecha
 *
 * @property Encargo[] $encargos
 * @property Presupuesto $codPresupuesto
 * @property Pago[] $pagos
 */
abstract class BaseEnvio extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'envio';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Envio|Envios', $n);
	}

	public static function representingColumn() {
		return array(': ', 'estado','fecha');
	}

	public function rules() {
		return array(
			array('id_empresa, id_operador, cod_presupuesto', 'required'),
			array('id_empresa, id_operador, cod_presupuesto', 'numerical', 'integerOnly'=>true),
			array('estado', 'length', 'max'=>9),
			array('fecha', 'length', 'max'=>30),
			array('estado, fecha', 'default', 'setOnEmpty' => true, 'value' => null),
			array('cod_envio, estado, id_empresa, id_operador, cod_presupuesto, fecha', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'encargos' => array(self::HAS_MANY, 'Encargo', 'cod_envio'),
			'codPresupuesto' => array(self::BELONGS_TO, 'Presupuesto', 'cod_presupuesto'),
			'pagos' => array(self::HAS_MANY, 'Pago', 'cod_envio'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'cod_envio' => Yii::t('app', 'Envio'),
			'estado' => Yii::t('app', 'Estado'),
			'id_empresa' => Yii::t('app', 'Empresa'),
			'id_operador' => Yii::t('app', 'Operador'),
			'cod_presupuesto' => null,
			'fecha' => Yii::t('app', 'Fecha de entrega'),
			'encargos' => null,
			'codPresupuesto' => null,
			'pagos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

                $conexion = $conexion = Util::connect();
                if(Util::isEmpresa(Yii::app()->user->name))
                {
                    $query="SELECT `cod_envio` FROM `envio` WHERE `id_empresa`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_envio',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_envio',  -1, false);
                    
                }else
                    if(Util::isOperador(Yii::app()->user->name))
                    {
                    $query="SELECT `cod_envio` FROM `envio` WHERE `id_operador`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_envio',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_envio',  -1, false);
                    }
                mysql_close($conexion);
                
                
		$criteria->compare('cod_envio', $this->cod_envio);
		$criteria->compare('estado', $this->estado, true);
		$criteria->compare('id_empresa', $this->id_empresa);
		$criteria->compare('id_operador', $this->id_operador);
		$criteria->compare('cod_presupuesto', $this->cod_presupuesto);
		$criteria->compare('fecha', $this->fecha, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	public function searchU() {
		$criteria = new CDbCriteria;             
                
		$criteria->compare('cod_envio', $this->cod_envio);
		$criteria->compare('estado', $this->estado, true);
		$criteria->compare('id_empresa', $this->id_empresa);
		$criteria->compare('id_operador', $this->id_operador);
		$criteria->compare('cod_presupuesto', $this->cod_presupuesto);
		$criteria->compare('fecha', $this->fecha, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}        
        
        
}