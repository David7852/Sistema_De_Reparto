<?php

/**
 * This is the model base class for the table "ruta".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ruta".
 *
 * Columns in table "ruta" available as properties of the model,
 * followed by relations of table "ruta" available as properties of the model.
 *
 * @property integer $cod_ruta
 * @property integer $ciudad_a
 * @property string $nombre_a
 * @property integer $ciudad_b
 * @property string $nombre_b
 * @property integer $distancia
 * @property integer $id_empresa
 *
 * @property Presupuesto[] $presupuestos
 * @property Sede $ciudadA
 * @property Sede $ciudadB
 */
abstract class BaseRuta extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ruta';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ruta|Rutas', $n);
	}

	public static function representingColumn() {
		return array('nombre_a','nombre_b');
	}

	public function rules() {
		return array(
			array('ciudad_a, ciudad_b, distancia', 'required'),
			array('ciudad_a, ciudad_b, distancia, id_empresa', 'numerical', 'integerOnly'=>true),
			array('nombre_a, nombre_b', 'length', 'max'=>50),
			array('nombre_a, nombre_b, id_empresa', 'default', 'setOnEmpty' => true, 'value' => null),
			array('cod_ruta, ciudad_a, nombre_a, ciudad_b, nombre_b, distancia, id_empresa', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'presupuestos' => array(self::HAS_MANY, 'Presupuesto', 'cod_ruta'),
			'ciudadA' => array(self::BELONGS_TO, 'Sede', 'ciudad_a'),
			'ciudadB' => array(self::BELONGS_TO, 'Sede', 'ciudad_b'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'cod_ruta' => Yii::t('app', 'Cod Ruta'),
			'ciudad_a' => null,
			'nombre_a' => Yii::t('app', 'Nombre A'),
			'ciudad_b' => null,
			'nombre_b' => Yii::t('app', 'Nombre B'),
			'distancia' => Yii::t('app', 'Distancia'),
			'id_empresa' => Yii::t('app', 'Id Empresa'),
			'presupuestos' => null,
			'ciudadA' => null,
			'ciudadB' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
                $conexion = $conexion = Util::connect();
                if(Util::isEmpresa(Yii::app()->user->name))
                {
                    $query="SELECT `cod_ruta` FROM `ruta` WHERE `id_empresa` is null or `id_empresa`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_ruta',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_ruta',  -1, false);
                }elseif(Yii::app()->user->IsGuest)
                {
                    $query="SELECT `cod_ruta` FROM `ruta` WHERE `id_empresa` is null ";
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_ruta',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_ruta',  -1, false);
                }
                mysql_close($conexion);
		$criteria->compare('cod_ruta', $this->cod_ruta);
		$criteria->compare('ciudad_a', $this->ciudad_a);
		$criteria->compare('nombre_a', $this->nombre_a, true);
		$criteria->compare('ciudad_b', $this->ciudad_b);
		$criteria->compare('nombre_b', $this->nombre_b, true);
		$criteria->compare('distancia', $this->distancia);
		$criteria->compare('id_empresa', $this->id_empresa);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}