<?php

/**
 * This is the model base class for the table "configuracion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Configuracion".
 *
 * Columns in table "configuracion" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $numero
 * @property string $NombreMiEmpresa
 * @property string $LogoMiEmpresa
 * @property string $EmailMilEmpresa
 * @property string $SloganMiEmpresa
 * @property integer $ReportSpam
 *
 */
abstract class BaseConfiguracion extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'configuracion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Configuracion|Configuracions', $n);
	}

	public static function representingColumn() {
		return 'NombreMiEmpresa';
	}

	public function rules() {
		return array(
			array('ReportSpam', 'required'),
			array('ReportSpam', 'numerical', 'integerOnly'=>true),
			array('NombreMiEmpresa, EmailMilEmpresa, SloganMiEmpresa', 'length', 'max'=>100),
			array('LogoMiEmpresa', 'length', 'max'=>150),
			array('NombreMiEmpresa, LogoMiEmpresa, EmailMilEmpresa, SloganMiEmpresa', 'default', 'setOnEmpty' => true, 'value' => null),
			array('numero, NombreMiEmpresa, LogoMiEmpresa, EmailMilEmpresa, SloganMiEmpresa, ReportSpam', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'numero' => Yii::t('app', 'Numero'),
			'NombreMiEmpresa' => Yii::t('app', 'Nombre Mi Empresa'),
			'LogoMiEmpresa' => Yii::t('app', 'Logo Mi Empresa'),
			'EmailMilEmpresa' => Yii::t('app', 'Email Mil Empresa'),
			'SloganMiEmpresa' => Yii::t('app', 'Slogan Mi Empresa'),
			'ReportSpam' => Yii::t('app', 'Report Spam'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('numero', $this->numero);
		$criteria->compare('NombreMiEmpresa', $this->NombreMiEmpresa, true);
		$criteria->compare('LogoMiEmpresa', $this->LogoMiEmpresa, true);
		$criteria->compare('EmailMilEmpresa', $this->EmailMilEmpresa, true);
		$criteria->compare('SloganMiEmpresa', $this->SloganMiEmpresa, true);
		$criteria->compare('ReportSpam', $this->ReportSpam);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}