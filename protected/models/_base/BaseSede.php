<?php

/**
 * This is the model base class for the table "sede".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Sede".
 *
 * Columns in table "sede" available as properties of the model,
 * followed by relations of table "sede" available as properties of the model.
 *
 * @property integer $cod_sede
 * @property string $ciudad
 * @property string $coordenada
 * @property integer $id_empresa
 *
 * @property Ruta[] $rutas
 * @property Ruta[] $rutas1
 */
abstract class BaseSede extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'sede';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Sede|Sedes', $n);
	}

	public static function representingColumn() {
		return 'ciudad';
	}

	public function rules() {
		return array(
			array('ciudad', 'required'),
			array('id_empresa', 'numerical', 'integerOnly'=>true),
			array('ciudad', 'length', 'max'=>50),
			array('coordenada', 'length', 'max'=>25),
			array('coordenada, id_empresa', 'default', 'setOnEmpty' => true, 'value' => null),
			array('cod_sede, ciudad, coordenada, id_empresa', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'rutas' => array(self::HAS_MANY, 'Ruta', 'ciudad_a'),
			'rutas1' => array(self::HAS_MANY, 'Ruta', 'ciudad_b'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'cod_sede' => Yii::t('app', 'Cod Sede'),
			'ciudad' => Yii::t('app', 'Ciudad'),
			'coordenada' => Yii::t('app', 'Coordenada'),
			'id_empresa' => Yii::t('app', 'Id Empresa'),
			'rutas' => null,
			'rutas1' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
                $conexion = $conexion = Util::connect();
                if(Util::isEmpresa(Yii::app()->user->name))
                {
                    $query="SELECT `cod_sede` FROM `sede` WHERE `id_empresa` is null or `id_empresa`=".Util::getid(Yii::app()->user->name);
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_sede',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_sede',  -1, false);
                }elseif(Yii::app()->user->IsGuest)
                {
                    $query="SELECT `cod_sede` FROM `sede` WHERE `id_empresa` is null ";
                    $r=mysql_query($query,$conexion) or die (mysql_error());
                    
                    $ids=array();//este arreglo sera igual a los ids seleccionados
                    while($arids=mysql_fetch_array($r,MYSQL_ASSOC))
                        foreach($arids as $i)
                            array_push($ids,$i);
                        //$HoraSalida=datetime('m/d/Y H:i',  strtotime($model->HoraSalida));//Linea Error
                    if(count($ids)>0)//si hay resultados, los muestra
                        $criteria->compare('cod_sede',  $ids, true);
                    else//si no, no muestra nada (nunca un id sera igual a -1)
                        $criteria->compare('cod_sede',  -1, false);
                }
                mysql_close($conexion);
                $criteria->compare('ciudad', $this->ciudad, true);
		$criteria->compare('cod_sede', $this->cod_sede);
		$criteria->compare('coordenada', $this->coordenada, true);
		$criteria->compare('id_empresa', $this->id_empresa);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}